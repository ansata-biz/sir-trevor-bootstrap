// Generated by CoffeeScript 1.6.3
(function() {
  var tab_template;

  tab_template = '\
  <div class="panel panel-default">\
    <div class="panel-heading">\
      <div class="buttons">\
        <button type="button" class="close">&times;</button>\
        <button type="button" class="reorder"><i class="st-icon st-icon-move"></i></button>\
      </div>\
      <h4 class="panel-title">\
         <a data-toggle="collapse" contenteditable="true" class="st-required">\
          Panel Heading\
        </a>\
      </h4>\
    </div>\
    <div class="panel-collapse collapse in">\
      <div class="panel-body" contenteditable="true" class="st-required">\
        Panel body\
      </div>\
    </div>\
  </div>';

  SirTrevor.Blocks.Accordion = SirTrevor.Block.extend({
    type: "accordion",
    title: 'Accordion',
    editorHTML: '<div class="panel-group st-text-block"></div>',
    icon_name: 'accordion',
    controllable: true,
    constructor: function(data, instance_id, sirTrevor) {
      this.controls = {
        'add': this.addPanel
      };
      return SirTrevor.Block.apply(this, arguments);
    },
    addPanel: function() {
      return this.$('.panel-group').append(tab_template);
    },
    onBlockRender: function() {
      if (this.$('.panel-group').children('.panel').length === 0) {
        this.$('.panel-group').append(tab_template);
      }
      this.$('.panel-group').on('click', 'button.close', function() {
        if (confirm('Are you sure you want to remove this panel?')) {
          return $(this).closest('.panel').remove();
        }
      });
      return new Sortable(this.$('.panel-group')[0], {
        handle: '.reorder',
        draggable: '.panel'
      });
    },
    toData: function() {
      var data;
      data = {
        panels: []
      };
      this.$('.panel').each(function() {
        return data.panels.push({
          title: $(this).find('.panel-title > a').html(),
          body: $(this).find('.panel-body').html()
        });
      });
      return this.setData(data);
    },
    loadData: function(data) {
      var $panel, panel, _i, _len, _ref, _results;
      if (typeof data !== 'undefined') {
        this.$('.panel').remove();
        _ref = data.panels;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          panel = _ref[_i];
          $panel = $(tab_template);
          $panel.find('.panel-title > a').html(panel.title);
          $panel.find('.panel-body').html(panel.body);
          _results.push(this.$('.panel-group').append($panel));
        }
        return _results;
      }
    }
  });

}).call(this);

/*
//@ sourceMappingURL=_accordion.map
*/
